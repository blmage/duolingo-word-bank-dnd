!function(){"use strict";const e=`__duo-toolbox__-${"action_request"}`;const r=async(r,o)=>t({type:e,action:r,value:o}).then((e=>{if("success"===(null==e?void 0:e.type))return e.value||null;throw new Error((null==e?void 0:e.error)||`An error occurred while processing a "${r}" action.`)})),t=async e=>new Promise(((r,t)=>{if("undefined"==typeof chrome)return browser.runtime.sendMessage(e);chrome.runtime.sendMessage(e,(e=>{chrome.runtime.lastError?t(chrome.runtime.lastError):r(e)}))})),o={enableDnd:!0,enableKeyboardShortcuts:!0,disableWordButtonsTts:!1,disableWordAnimation:"never"},n="is-loading",a=Object.fromEntries(Array.from(document.querySelectorAll('input[type="checkbox"]')).map((e=>[e.name,e]))),c=Array.from(document.querySelectorAll('input[type="radio"]')).reduce(((e,r)=>(!e[r.name]&&(e[r.name]={}),e[r.name][r.value]=r,e)),{}),s=[...Object.values(a),...Object.values(c).flatMap((e=>Object.values(e)))];async function i(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;document.body.classList.add(n),s.forEach((e=>e.disabled=!0));try{await Promise.all([e(),(t=r,new Promise((e=>setTimeout(e,t))))])}finally{s.forEach((e=>e.disabled=!1)),document.body.classList.remove(n)}var t}s.forEach((e=>e.addEventListener("change",(e=>i((()=>{return r("update_options",{[e.target.name]:(t=e.target.name,a[t]?a[t].checked:c[t]?null===(o=Object.values(c[t]).find((e=>e.checked)))||void 0===o?void 0:o.value:void 0)});var t,o}),250))))),i((()=>r("get_options").catch((()=>o)).then((e=>{for(const[t,o]of Object.entries(e)){var r;a[t]?a[t].checked=!!o:null!==(r=c[t])&&void 0!==r&&r[o]&&(c[t][o].checked=!0)}document.body.classList.remove(n)}))))}();
